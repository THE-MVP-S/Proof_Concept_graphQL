type Query {
  # READ routes
  test: String
  # get list of all employees in org
  employees: [Employee]
  # get list of employee by name
  employeeByName(firstName: String, lastName: String): [Employee]
  # get employess by ID
  employeeByID(id:ID) : [Employee]
  # get list of departments
  department: [Department]
}

type Mutation {
  addEmployee(firstName: String, lastName: String, date: String, city: City, state: State): String,

  # rmEmployee(fir): [Employee],

  # updateEmployee() : [Employee]
}



type Employee {
    id: ID
    firstName: String!
    lastName: String!
    date: String
    city: String
    state: String
    position: String
}

enum City {
  AUSTIN
  HOUSTON
  LOS ANGELES
}

enum State {
  TEXAS
  CALIFORNIA
}

type Position {
    id: ID
    title: String
    description: String
    salary: Int
    department: Department
}

type Department {
    id: ID
    departmentName: String
}
